{"version":3,"sources":["webpack:///./src/views/Customers/Edit/index.vue?a88b","webpack:///src/views/Customers/Edit/index.vue","webpack:///./src/views/Customers/Edit/index.vue?2673","webpack:///./src/views/Customers/Edit/index.vue","webpack:///./src/mixins/hasForm.js","webpack:///./src/services/CustomerService.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","$t","on","submit","onSubmit","attrs","type","name","placeholder","domProps","value","errors","$data","get","phone","to","staticRenderFns","Editvue_type_script_lang_js_","mixins","withUser","hasForm","data","customer","mounted","_this","CustomerService","show","$route","params","id","then","_ref","methods","ev","_this2","preventDefault","fd","FormData","target","append","user","client_id","sweetalert_min_default","title","text","icon","buttons","cancel","confirm","closeModal","shouldCreate","update","Promise","reject","res","$router","push","catch","e","a","close","stopLoading","response","status","ErrorBag","unknownError","Customers_Editvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","_helpers_ErrorBag__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_components_UI_ErrorList__WEBPACK_IMPORTED_MODULE_1__","components","ErrorList","_helpers_client__WEBPACK_IMPORTED_MODULE_0__","create","$can","client","post","unauthorizedError","delete","laravelDelete","concat","restore","laravelPut","customerId"],"mappings":"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","file":"js/editCustomers.d7c8be44.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('page',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12\"},[_c('h1',[_vm._v(_vm._s(_vm.$t('pages.editCustomers')))])])]),_c('div',{staticClass:\"card shadow\"},[_c('div',{staticClass:\"card-body\"},[_c('form',{on:{\"submit\":_vm.onSubmit}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-md-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('labels.name')))]),_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"name\":\"name\",\"placeholder\":_vm.$t('placeholders.name')},domProps:{\"value\":_vm.name}}),_c('error-list',{attrs:{\"errors\":_vm.$data.errors.get('name')}})],1)]),_c('div',{staticClass:\"col-12 col-md-6\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('labels.phone')))]),_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"name\":\"phone\",\"placeholder\":_vm.$t('placeholders.phone')},domProps:{\"value\":_vm.phone}}),_c('error-list',{attrs:{\"errors\":_vm.$data.errors.get('phone')}})],1)])]),_c('div',{staticClass:\"text-right\"},[_c('router-link',{staticClass:\"btn btn-danger mr-2\",attrs:{\"to\":{name: 'customers'}}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn btn-primary\"},[_vm._v(\"Salvar\")])],1)])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\n  import ErrorBag from \"../../../helpers/ErrorBag\"\n  import withUser from '@/mixins/withUser'\n  import hasForm from '@/mixins/hasForm'\n  import swal from 'sweetalert'\n  import CustomerService from \"../../../services/CustomerService\"\n\n  export default {\n    name: 'EditCustomers',\n    mixins: [withUser, hasForm],\n    data: () => ({name: '', phone: '', customer: null}),\n    mounted() {\n        CustomerService.show(this.$route.params.id)\n          .then(({data: {data}}) => {\n            this.$data.customer = data\n            this.$data.name = data.name\n            this.$data.phone = data.phone\n          })\n    },\n    methods: {\n      onSubmit(ev) {\n        ev.preventDefault()\n\n        const fd = new FormData(ev.target)\n        fd.append('user_id', this.user.id)\n        fd.append('client_id', this.user.client_id)\n\n        swal({\n          title: $t('notifications.title.wait'),\n          text: $t('notifications.message.customer.edit.wait'),\n          icon: 'warning',\n          buttons: {\n            cancel: 'Cancelar',\n            confirm: {\n              text: 'OK',\n              value: true,\n              closeModal: false\n            }\n          }\n        })\n          .then(shouldCreate => {\n            if (shouldCreate) return CustomerService.update(this.$data.customer, fd)\n            return Promise.reject(false)\n          })\n          .then(res => res.data.data)\n          .then(data => {\n            return swal($t('notifications.title.success'), $t('notifications.message.customer.edit.success'), 'success')\n          })\n          .then(() => {\n            this.$router.push({\n              name: 'customers'\n            })\n          })\n          .catch(e => {\n            if (e === false) {\n              swal.close()\n              swal.stopLoading()\n            } else if (e && e.response && e.response.status === 422) {\n              return swal($t('notifications.title.error'), $t('notifications.message.validation'), 'warning')\n                .then(() => {\n                  this.$data.errors = new ErrorBag(e.response.data.errors)\n\n                  swal.stopLoading()\n                  swal.close()\n                })\n            } else {\n              unknownError()\n            }\n          })\n\n        return false\n      }\n    }\n  }\n</script>\n\n<template>\n    <page>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h1>{{ $t('pages.editCustomers') }}</h1>\n            </div>\n        </div>\n        <div class=\"card shadow\">\n            <div class=\"card-body\">\n                <form @submit=\"onSubmit\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-md-6\">\n                            <div class=\"form-group\">\n                                <label>{{ $t('labels.name') }}</label>\n                                <input type=\"text\"\n                                       class=\"form-control\"\n                                       name=\"name\"\n                                       :value=\"name\"\n                                       :placeholder=\"$t('placeholders.name')\">\n                                <error-list :errors=\"$data.errors.get('name')\"/>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-md-6\">\n                            <div class=\"form-group\">\n                                <label>{{ $t('labels.phone')}}</label>\n                                <input type=\"text\"\n                                       class=\"form-control\"\n                                       name=\"phone\"\n                                       :value=\"phone\"\n                                       :placeholder=\"$t('placeholders.phone')\">\n                                <error-list :errors=\"$data.errors.get('phone')\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"text-right\">\n                        <router-link :to=\"{name: 'customers'}\" class=\"btn btn-danger mr-2\">Cancelar</router-link>\n                        <button class=\"btn btn-primary\">Salvar</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </page>\n</template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2e8723de&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import ErrorBag from \"../helpers/ErrorBag\"\nimport ErrorList from '@/components/UI/ErrorList'\n\nexport default {\n  components: {ErrorList},\n  data: () => ({errors: new ErrorBag()})\n}","import client from \"../helpers/client\"\n\nexport default {\n  create(data) {\n    if (!$can('createCustomer')) return unauthorizedError().then(() => Promise.reject(false))\n    return client.post('/api/customers', data)\n  },\n  delete(customer) {\n    if (!$can('deleteCustomer', customer)) return unauthorizedError().then(() => Promise.reject(false))\n    return client.laravelDelete(`/api/customers/${customer.id}`)\n  },\n  restore(customer) {\n    if (!$can('restoreCustomer', customer)) return unauthorizedError().then(() => Promise.reject(false))\n    return client.laravelPut(`/api/customers/restore/${customer.id}`)\n  },\n  show(customerId) {\n    if (!$can('viewCustomer')) return unauthorizedError().then(() => Promise.reject(false))\n    return client.get(`/api/customers/${customerId}`)\n  },\n  update(customer, data) {\n    if (!$can('updateCustomer', customer)) return unauthorizedError().then(() => Promise.reject(false))\n    return client.laravelPut(`/api/customers/${customer.id}`, data)\n  }\n}"],"sourceRoot":""}